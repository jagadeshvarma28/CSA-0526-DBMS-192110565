Enter password: *****
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 108
Server version: 5.5.62 MySQL Community Server (GPL)

Copyright (c) 2000, 2018, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> use varma;
Database changed
mysql> DELIMITER //
mysql> CREATE FUNCTION CUSTOMER(CRE_LIM INT)
    -> RETURNS VARCHAR(20)
    -> DETERMINISTIC
    -> BEGIN
    ->   DECLARE CUSTOMER_LEVEL VARCHAR(20);
    ->   SET CUSTOMER_LEVEL=' ';
    -> IF CRE_LIM >50000 THEN
    ->   SET CUSTOMER_LEVEL='PLATINUM';
    -> ELSEIF CRE_LIM <=50000 AND CRE_LIM>=10000 THEN
    ->   SET CUSTOMER_LEVEL='GOLD';
    -> ELSEIF CRE_LIM < 10000 THEN
    ->   SET CUSTOMER_LEVEL='SILVER';
    -> END IF;
    -> RETURN CUSTOMER_LEVEL;
    -> END //
Query OK, 0 rows affected (0.04 sec)

mysql> SELECT CUSTOMER(20000);
    -> //
+-----------------+
| CUSTOMER(20000) |
+-----------------+
| GOLD            |
+-----------------+
1 row in set (0.04 sec)

mysql> SELECT CUSTOMER(100000);
    -> //
+------------------+
| CUSTOMER(100000) |
+------------------+
| PLATINUM         |
+------------------+
1 row in set (0.00 sec)

mysql> SELECT CUSTOMER(500);
    -> //
+---------------+
| CUSTOMER(500) |
+---------------+
| SILVER        |
+---------------+
1 row in set (0.00 sec)

mysql> DELIMITER $$
mysql> CREATE PROCEDURE factorial(IN n INT,OUT fact INT)
    -> BEGIN
    -> IF n=1 THEN
    ->   SET fact:=1;
    -> ELSE
    ->   CALL factorial(n-1,fact);
    ->   SET fact:=n* fact;
    -> END IF;
    -> END
    -> $$
Query OK, 0 rows affected (0.04 sec)

mysql> DELIMITER $$
mysql> CREATE PROCEDURE find_fact(IN n INT)
    -> BEGIN
    -> SET @@GLOBAL.max_sp_recursion_depth =255;
    -> SET @@session.max_sp_recursion_depth=255;
    -> CALL factorial(n,@fact);
    -> SELECT @fact;
    -> END
    -> $$
Query OK, 0 rows affected (0.04 sec)

mysql> call find_fact(5);
    -> $$
+-------+
| @fact |
+-------+
|   120 |
+-------+
1 row in set (0.04 sec)

Query OK, 0 rows affected (0.05 sec)

mysql> DELIMITER //
mysql> CREATE FUNCTION find_sum( A INT,B INT)
    -> RETURNS INT
    -> DETERMINISTIC
    -> BEGIN
    -> DECLARE SUM INT;
    -> SET SUM=A+B;
    -> RETURN SUM;
    -> END //
Query OK, 0 rows affected (0.04 sec)

mysql> SELECT find_sum(5,2);
    -> //
+---------------+
| find_sum(5,2) |
+---------------+
|             7 |
+---------------+
1 row in set (0.00 sec)

mysql> SELECT find_sum(11,-7);
    -> //
+-----------------+
| find_sum(11,-7) |
+-----------------+
|               4 |
+-----------------+
1 row in set (0.04 sec)